Easy:

Question 1 -> Calculate the sum of all the integers from 1 to n using a loop
Question 2 -> Write a function to check if a number is prime 
Question 3 -> Write a recursive function to calculate the factorial of a number 
Question 4 -> Write a program to print the first n terms of the Fibonacci sequence using recursion
Question 5 -> Write a program that prompts the user to guess a randomly generated number and provides feedback
Quedtion 6 -> Find the smalled integer in list, skip non-integers, nil if not a list and also use recursion
Question 7* -> Binary Search, create a tail-recursive function that performs a binary search on a sorted list of integers
Question 8 -> Reverse a list, write a tail-recursive function to reverse a list
Question 9 -> Count the elements in a list, write a recursive function that takes in a list as input and returns the count of the elements in the list
Question 10 -> Check for Balanced Parentheses, create a recursive function that checks if a string parentheses are balanced. Your Function should return T if the input string has balanced parentheses and NIL if it does not.
Question 11 -> Implement a Lisp function that takes a list of words (strings) as input and returns a list of unique words from the input list. Ensure that your solution efficiently handles duplicate words and maintains the order of the original list.

Medium:
Question 12 -> Implement a Lisp function that calculates the determinant of a square matrix using recursion. The determinant of a 2x2 matrix [a b] [c d] is given by the formula ad - bc. For larger matrices, you can use the expansion by minors approach. Avoid using built-in matrix functions or loops in your solution.
Question 13 -> Write a function MERGE-SORTED-LISTS that takes two sorted lists and a comparator and returns the result of merging the two sorted list
Question 14 ->	Write a tail-recursive function SUM-DEEP-LIST that calculates and returns the sum of all numberic elements in a deeply nested list. The functions assumes all the elements are either lists or integer.
Question 15 -> Modify your tail-recursive function in the above question so that it will work with a list of mixed types. Call the function SUM-DEEP-LIST-INT. it will return the sum of all integers in the given list. Make sure to modify all your recursive calls to the new function name, and ensure that your solution is tail recursive.
Question 16 -> Write a function FLATTEN-LIST that takes a nested list as an input and returns as a flattened list. The nested list may contain sublist at various depths. The result should be a single-level list containing all the elements in the order they were encountered in the orginal list
Question 17 -> Write a function IS-PALINDROME? that determines wheather a given list is a palindrome (is the same forwards and backwards)

Structure Question:
Question 18 -> Make a structure called book that contains information about the book title (string), author (string), genre (string), and number of page (integer). Create a function called max-books-pages. Create a function called last-books-author would come last alphabetically.
Question 19 -> Create a structure called "books" that contains information about the book title (string), author (string), genre (string), and number of pages (integer). Create a function called max-books that take an array of books and a function (f) as infut. f is used to compare books, taking 2 book object as input and returning t if the first element is "less than" the second element, and nil otherwise. max-books return the book object that is considered greatest by f. This question is essenitally the same as the previous question, but this function has the flexibility to compare objects in multiple ways
	a) What would a function call to max-books look like to get the book with the most pages? with the least pages? the book whose author comes first alphabetically? the mystery book furthest back in array?
Question 20 -> Grade Counter, A database is being created to keep track of students in the CS program. This database should include each student's year of study (1, 2, 3, or 4), and grades they have revieved on each of their lab assignments. using a database, we can determine how well students are doing overall in their studies based on the year they are in. Create a structure called "Student" that contain their year of study (1, 2, 3, or 4) and a list of thier lab grades with values ranging from 0-100 inclusive. Creat a function called "count-above" that take a student, an integer representing the year of study, and an integer representing a grade threshold as inputs. If the student is not in the given year of study, return 0, otherwise return the number of grades that are greater than or equal to the grade threshold. Creat a funcation called "Student-above" that takes an array of studenst, an integer representing the year of study, and an integer representing the grade threshold as inputes. Using the count-above function created above, return the total number of grades greater than or equal to the grade threshold fulfilled by student only in the given year of study
Question 21 -> Redacted Personnel, create a person structure, where each person has a first name, mother name, father name, and sibling's name, all represented by strings. In some cases, a person doesn't have a family member, so their name is nil instead. Create a function called "redact-names" which takes a list of person object and string representing a name as input. Given the list and the name, remove any instance of the name in all the person objects and return the updated list. Assume you only need to remove perfect matches - not parical matches of the strings. To redact a name, replace the name "____" instead of the orginal name. Make a structure called book that contains information about the book title (string), author (string), genre (string), and number of page (integer). Create a function called max-books-pages. Create a function called last-books-author would come last alphabetically.

